name: Build and Test

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      ref:
        required: true
        type: string
      extension:
        required: true
        type: string
    secrets:
      GRADLE_USER_CONFIG:
        required: true

jobs:
  single-extension:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: "sapcxtools/workspace"
          ref: "main"
          path: ""
          fetch-depth: 1
      - name: Remove extension from workspace
        shell: bash
        run: |
          rm -Rf "core-customize/hybris/bin/custom/sapcxtools/${{ inputs.extension }}"
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          path: "core-customize/hybris/bin/custom/sapcxtools/${{ inputs.extension }}"
          fetch-depth: 1
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "11"
          cache: "gradle"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set up cache for SAP artifacts
        uses: actions/cache@v2
        with:
          key: sap-artifacts-cache-${{ hashFiles('core-customize/manifest.json') }}
          path: dependencies
      - name: SAP download config
        env:
          USER_CONFIG: ${{ secrets.GRADLE_USER_CONFIG }}
        shell: bash
        run: |
          mkdir -p ${HOME}/.gradle
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "${USER_CONFIG}" >> ${HOME}/.gradle/gradle.properties
      - name: SAP Commerce environment
        run: |
          echo "HYBRIS_OPT_CONFIG_DIR=$GITHUB_WORKSPACE/core-customize/hybris/config/local-config" >> $GITHUB_ENV
          echo "HYBRIS_BIN_DIR=$GITHUB_WORKSPACE/core-customize/hybris/bin" >> $GITHUB_ENV
          echo "HYBRIS_CONF_DIR=$GITHUB_WORKSPACE/core-customize/hybris/config" >> $GITHUB_ENV
          echo "HYBRIS_LOG_DIR=$GITHUB_WORKSPACE/core-customize/hybris/log" >> $GITHUB_ENV
      - name: Bootstrap platform
        run: ./gradlew setupLocalDevelopment
      - name: Configure extension
        run: |
          cp -f ci/config/localextensions-template.xml $HYBRIS_CONF_DIR/localextensions.xml
          sed -i 's/EXTENSIONNAME/${{ inputs.extension }}/' $HYBRIS_CONF_DIR/localextensions.xml
          echo 'testclasses.extensions=${{ inputs.extension }}' > $HYBRIS_CONF_DIR/local-config/99-local.properties
      - name: Build platform
        run: ./gradlew yall
      - name: Run unit tests
        run: |
          cat $GITHUB_WORKSPACE/ci/config/testing-unit.properties > $HYBRIS_CONF_DIR/local-config/95-local.properties
          ./gradlew yunittests

          # Target never fails, therefore, check for test errors and fail if errors were found
          for file in $HYBRIS_LOG_DIR/junit/test-results/unit/*.xml; do if [ "$(grep -cE '<(error|failure)' "${file}")" -gt 0 ]; then exit 1; fi; done
      - name: Run integration tests
        run: |
          cat $GITHUB_WORKSPACE/ci/config/testing-integration.properties > $HYBRIS_CONF_DIR/local-config/95-local.properties
          ./gradlew yintegrationtests

          # Target never fails, therefore, check for test errors and fail if errors were found
          for file in $HYBRIS_LOG_DIR/junit/test-results/integration/*.xml; do if [ "$(grep -cE '<(error|failure)' "${file}")" -gt 0 ]; then exit 1; fi; done
